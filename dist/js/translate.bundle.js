!function(){const e={currentLanguage:"en",supportedLanguages:{en:"English",es:"Español",fr:"Français",zh:"中文",ar:"العربية",hi:"हिन्दी",bn:"বাংলা",ur:"اردو"},googleApiKey:null};async function t(t){e.supportedLanguages[t]?(e.currentLanguage=t,localStorage.setItem("preferredLanguage",t),await async function(){const t=document.querySelectorAll("[data-translate]");for(const a of t){a.dataset.translate;const t=a.textContent;try{const o=await n(t,e.currentLanguage);a.textContent=o}catch(e){console.error("Translation error:",e)}}}()):console.error("Unsupported language:",t)}async function n(t,n){if(!e.googleApiKey)throw new Error("Google Translate API key not found");const a=await fetch("https://translation.googleapis.com/language/translate/v2",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.googleApiKey}`},body:JSON.stringify({q:t,target:n,format:"text"})});if(!a.ok)throw new Error("Translation failed");return(await a.json()).data.translations[0].translatedText}document.addEventListener("DOMContentLoaded",(()=>{(function(){e.googleApiKey=process.env.GOOGLE_TRANSLATE_API_KEY;const n=localStorage.getItem("preferredLanguage");n&&e.supportedLanguages[n]&&(e.currentLanguage=n),function(){const n=document.createElement("select");n.id="language-selector",n.className="language-selector",Object.entries(e.supportedLanguages).forEach((([t,a])=>{const o=document.createElement("option");o.value=t,o.textContent=a,o.selected=t===e.currentLanguage,n.appendChild(o)})),n.addEventListener("change",(e=>{t(e.target.value)}));const a=document.querySelector(".main-nav");a&&a.appendChild(n)}()})(),document.querySelectorAll("h1, h2, h3, p, button, label").forEach((e=>{e.textContent.trim()&&e.setAttribute("data-translate",e.textContent)}))})),window.translate={changeLanguage:t,translateText:n,translateChatMessage:async function(e,t){try{return await n(e,t)}catch(t){return console.error("Error translating chat message:",t),e}},detectLanguage:async function(t){if(!e.googleApiKey)throw new Error("Google Translate API key not found");const n=await fetch("https://translation.googleapis.com/language/translate/v2/detect",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.googleApiKey}`},body:JSON.stringify({q:t})});if(!n.ok)throw new Error("Language detection failed");return(await n.json()).data.detections[0][0].language}}}();